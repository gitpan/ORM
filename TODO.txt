First queue:
 * Use transactions in 'new', 'update', 'delete' by default
 * Implement ORM::Db::Backup driver
 * Implement ORM::Db::Replicated driver (to work with replicated DB in 'one master many slaves' mode)
 * Add 'preload' argument to 'find' method
 * Temporary objects support:
   * 'find' and 'new' methods can return temporary objects
   * 'update' and 'delete' don't write to DB for temporary objects
   * 'serialized' returns string containing object content, that string is useful
     to construct object.
   * Add 'make_permanent' object method
   * Add 'make_permanent' class method, to have ability to implement optimized INSERT of many objects
 * ORM::Filter descendants should check its argument types
 * Implement permissions to use ORM::Expr with 'update'
 * Die if '_ORM_refs' table contains information about property missing in class
 * Die if 'filter' argument to 'find' method is not an ORM::Expr
 * Documentation
   * Tutorial
   * Manual pages
   * Object model example
 * ORM tools
   * Object model web-browsing
   * Refactoring tools:
     * move property to descendant class
     * move property to base class
     * create class and its table templates
 * Improve ORM::Error, create ORM::Error::Db
 * Suspended object creation
   ( Should accept argument 'make_permanent', telling to replace suspended object by permanent one )
 * Implement multifield properties
 * Allow multiple object models in one program

Second queue:
 * Check modules versioning rules to comply to CPAN
   perl -MExtUtils::MakeMaker -le 'print MM->parse_version(shift)' 'file'
 * Events (Triggers)
 * Tests for ORM::History
 * Initial class configuration:
   * Parameter to enable/disable autoload of descendants classes and property classes
     in 'stat' and 'find' methods, user can rely on Class::Autouse instead.
 * Method stat should autoload descendants classes and property classes
 * Methods 'stat' and 'find' should accept argument telling not to autoload
   descendants classes and property classes
 * Meta properties for ORM::Stat descendants
 * Die if 'class' is an empty string
 * Arbitrary field to use as 'id' field
 * Arbitrary field to use as 'class' field
 * lazy_load on per field basis
